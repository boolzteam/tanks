double Log_By_Base(double value, double wanted_base)
{
	double newVal = 0;
	newVal = log(value) / log(wanted_base);
	return newVal;
}
void Guided_Missile(Tank* tank, char map[N][M], Tank **arr)
{
	bool done = FALSE;
	double x = 0, y, b=0;
	int a, direction = 0, diffrence;
	char tempMap[N][M];
	for (int i = 0;i < N;i++)
		for (int j = 0;j < M;j++)
			tempMap[i][j] = map[i][j];
	printf("Enter which direction you want to shoot, Left - 1, Right - 2\n");
	scanf("%d", &direction);
	do{
		printf("Enter log base and a value:\n");
		scanf("%lf%d", &b, &a);
		if(b<=0||b==1)
			printf("Log base can not be 1 ,0 or negetive, Try again!\n");
	} while (b<=0||b==1);
	y = tank->y;
	x = tank->x;
	int i = 0;
	for (int k = 1;k < a + 2;k++)
		tempMap[(int)x - k][(int)y] = '*';

	diffrence = Log_By_Base(a, b);
	x -= a + 2;
	while (y>0 && y < M-1  && tempMap[(int)x][(int)y] != '|'&& x>0 && x < N-1 )
	{
		int prev = y-diffrence;
		if (direction == 2)
			y = y + diffrence;
		else
			y = y - diffrence;
		for (int i = y;i < y + diffrence;i++)
		{
			if (i < M-1 && i>0)
			{
				if (tempMap[(int)x][i] == '|' || glob_hit(tank, map, arr, (int)x, i) == TRUE)
				{
					for (int j = diffrence-1;j > 0;)
					{
						if (diffrence < 3)
							break;
						if (direction == 2)
						{
							if (tempMap[(int)x ][i - j] != '|')
								j--;
							else 
							{
								tempMap[(int)x][i - j-1] = '*';
								break;
							}
						}
						else if(direction == 1)
						{

							if (tempMap[(int)x ][i + j] != '|')
								j--;
							else 
							{
								tempMap[(int)x][i + j+1] = '*';
								break;
							}
								
						}
						if (j == 1)
						{
							if (direction == 2)
							{
								if (tempMap[(int)x][i - 1] == ' ')
								{
									tempMap[(int)x][i - 1] = '*';
									break;
								}
								
							}
							else if (direction == 1)
							{
								if (tempMap[(int)x][i + 1] == ' ')
								{
									tempMap[(int)x][i +  1] = '*';
									break;
								}
							}
						}
					}
					done = TRUE;
					break;
				}
			}
			else
				break;
		}
		if (tempMap[(int)x][(int)y] == '|'||done==TRUE)
			break;
		if(tempMap[(int)x][(int)y] == ' ' && y < M - 1&& y>0)
			tempMap[(int)x][(int)y] = '*';
		diffrence++;
		x--;
	}
	PrintBoard(tempMap);
}
