void Directshot(Tank* tank, char map[N][M],Tank ** arr)
{
    int power = 0, tempX = 0, index = 0;
    double angel = 0, tempY = 0;
    char tempMap[N][M];
    for (int i = 0; i<N; i++)
        for (int j = 0; j<M; j++)
            tempMap[i][j] = map[i][j];

    printf("Enter Angel and Power:\n");
    scanf("%lf%d", &angel, &power);
    double radian = angel / 180 * M_PI; // convert to radian

    //double radian = tan(angel);
    printf("Rad:%lf",radian);
    tempX = tank->x;
    tempY = tank->y;
    for (int i = 1; i <= power; i++)
    {
        if (angel < 90)
        {
            tempX = tempX - radian;
            tempY = tempY + 1;
        }
        else if (angel > 90 && angel < 180)
        {
            tempX = tempX - radian;
            tempY = tempY - 1;
        }
        else if (angel > 180 && angel < 270)
        {
            tempX = tempX + radian;
            tempY = tempY - 1;
        }
        else if(angel > 270 && angel < 360 )
        {
            tempX = tempX + radian;
            tempY = tempY + 1;
        }
        else if(angel==0 || angel==360)
            tempY = tempY + 1;
        else if(angel==90)
            tempX = tempX - radian;
        else if(angel==180)
            tempY = tempY - 1;
        else if(angel==270)
            tempX = tempX + radian;
        if (map[tempX][(int)round(tempY)] == 'A' || map[tempX][(int)round(tempY)] == 'B' || map[tempX][(int)round(tempY)] == 'C' || map[tempX][(int)round(tempY)] == 'D')
        {
            switch (map[tempX][(int)round(tempY)])
            {
                case 'A':
                    arr[0]->life--;
                    if (arr[0]->life == 0)
                    {
                        arr[0]->live = FALSE;
                        printf("Player A is dead.\n");
                        map[arr[0]->x][arr[0]->y] = ' ';
                    }
                    break;
                case 'B':
                    arr[1]->life--;
                    if (arr[1]->life == 0)
                    {
                        arr[1]->live = FALSE;
                        printf("Player A is dead.\n");
                        map[arr[1]->x][arr[1]->y] = ' ';
                    }
                    break;
                case 'C':
                    arr[2]->life--;
                    if (arr[2]->life == 0)
                    {
                        arr[2]->live = FALSE;
                        printf("Player A is dead.\n");
                        map[arr[2]->x][arr[2]->y] = ' ';
                    }
                    break;
                case 'C':
                    arr[3]->life--;
                    if (arr[3]->life == 0)
                    {
                        arr[3]->live = FALSE;
                        printf("Player A is dead.\n");
                        map[arr[3]->x][arr[3]->y] = ' ';
                    }
                    break;
            }
        }
        printf("tempX:%d\n", tempX);
        tempMap[tempX][(int)round(tempY)] = '*'; //print 1 shot
    }
    tempY = round(tempY); // final Y index.
    PrintBoard(tempMap);
}
